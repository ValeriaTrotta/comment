{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/commentDef/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport ChannelList from \"../channels/ChannelList\";\nimport \"./Dashboard.css\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport topc from \"../../images/topcha.png\";\n\nclass Dashboard extends Component {\n  render() {\n    const {\n      channels\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"containerdash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: topc,\n      alt: \"topc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topcha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ChannelList, {\n      channels: channels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    channels: state.firestore.ordered.channels\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: \"channels\"\n}]))(Dashboard);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/commentDef/src/components/dashboard/Dashboard.js"],"names":["React","Component","ChannelList","connect","firestoreConnect","compose","topc","Dashboard","render","channels","props","mapStateToProps","state","console","log","firestore","ordered","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEJ,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEG,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AAb+B;;AAgBlC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLH,IAAAA,QAAQ,EAAEG,KAAK,CAACG,SAAN,CAAgBC,OAAhB,CAAwBP;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAeJ,OAAO,CACpBF,OAAO,CAACQ,eAAD,CADa,EAEpBP,gBAAgB,CAAC,CAAC;AAAEa,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAD,CAFI,CAAP,CAGbV,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ChannelList from \"../channels/ChannelList\";\nimport \"./Dashboard.css\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport topc from \"../../images/topcha.png\";\n\nclass Dashboard extends Component {\n  render() {\n    const { channels } = this.props;\n    return (\n      <div className=\"containerdash\">\n        <div className=\"title\">\n          <img src={topc} alt=\"topc\" />\n        </div>\n        <div className=\"topcha\">\n          <ChannelList channels={channels} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    channels: state.firestore.ordered.channels,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"channels\" }])\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}